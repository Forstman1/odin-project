

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {

  id        Int       @id @default(autoincrement())
  firstName String?
  lastName String?
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  posts     Post[]
  comments  Comment[]
  likes     Like[]
  friends   Friend[]
  requestsend Friendrequest[] @relation("sendrequest")
  requestreveive Friendrequest[] @relation("reveiverequest")

}


model Friendrequest {

  id        Int       @id @default(autoincrement())
  requesterId Int
  recipientId Int

  status     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  requester User @relation("sendrequest", fields: [requesterId], references: [id], onDelete: Cascade)
  receiver User @relation("reveiverequest", fields: [recipientId], references: [id], onDelete: Cascade)
  
  // @@unique([requesterId, recipientId])

}


model Friend {
  
  id Int  @id @default(autoincrement())

  friendId Int
  userId   Int
  friend User @relation(fields: [friendId], references: [id], onDelete: Cascade)
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       String?
  description String?

  userId      Int
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments    Comment[]
  likes       Like[]
}




model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comment   String?

  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

